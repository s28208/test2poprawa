// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240621130633_Init3")]
    partial class Init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Object", b =>
                {
                    b.Property<int>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectID"));

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ObjectTypeID")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseID")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ObjectID");

                    b.HasIndex("ObjectTypeID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Objects");

                    b.HasData(
                        new
                        {
                            ObjectID = 1,
                            Height = 5,
                            ObjectTypeID = 1,
                            WarehouseID = 1,
                            Width = 4
                        },
                        new
                        {
                            ObjectID = 2,
                            Height = 1,
                            ObjectTypeID = 2,
                            WarehouseID = 2,
                            Width = 9
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.ObjectOwner", b =>
                {
                    b.Property<int>("ObjectID")
                        .HasColumnType("int");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.HasKey("ObjectID", "OwnerID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Object_Owner");

                    b.HasData(
                        new
                        {
                            ObjectID = 1,
                            OwnerID = 1
                        },
                        new
                        {
                            ObjectID = 1,
                            OwnerID = 2
                        },
                        new
                        {
                            ObjectID = 2,
                            OwnerID = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.ObjectType", b =>
                {
                    b.Property<int>("ObjectTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectTypeId");

                    b.ToTable("ObjectTypes");

                    b.HasData(
                        new
                        {
                            ObjectTypeId = 1,
                            Name = "ot1"
                        },
                        new
                        {
                            ObjectTypeId = 2,
                            Name = "ot2"
                        },
                        new
                        {
                            ObjectTypeId = 3,
                            Name = "ot3"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Owner", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("OwnerID");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerID = 1,
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            PhoneNumber = "111111111"
                        },
                        new
                        {
                            OwnerID = 2,
                            FirstName = "Anna",
                            LastName = "Nowak",
                            PhoneNumber = "222222222"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WarehouseID");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseID = 1,
                            Name = "h1"
                        },
                        new
                        {
                            WarehouseID = 2,
                            Name = "h2"
                        },
                        new
                        {
                            WarehouseID = 3,
                            Name = "h3"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Object", b =>
                {
                    b.HasOne("WebApplication1.Models.ObjectType", "ObjectType")
                        .WithMany("Objects")
                        .HasForeignKey("ObjectTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Warehouse", "Warehouse")
                        .WithMany("Objects")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjectType");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WebApplication1.Models.ObjectOwner", b =>
                {
                    b.HasOne("WebApplication1.Models.Object", "Object")
                        .WithMany("ObjectOwners")
                        .HasForeignKey("ObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Owner", "Owner")
                        .WithMany("ObjectOwners")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("WebApplication1.Models.Object", b =>
                {
                    b.Navigation("ObjectOwners");
                });

            modelBuilder.Entity("WebApplication1.Models.ObjectType", b =>
                {
                    b.Navigation("Objects");
                });

            modelBuilder.Entity("WebApplication1.Models.Owner", b =>
                {
                    b.Navigation("ObjectOwners");
                });

            modelBuilder.Entity("WebApplication1.Models.Warehouse", b =>
                {
                    b.Navigation("Objects");
                });
#pragma warning restore 612, 618
        }
    }
}
